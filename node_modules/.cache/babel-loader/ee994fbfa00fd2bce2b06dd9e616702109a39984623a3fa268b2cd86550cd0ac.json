{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input, validateOne, ValidatorConstants } from 'switch-themes';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [value, setValue] = useState('');\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n  const handleValidateInput = () => {\n    console.log(validateOne({\n      type: ValidatorConstants.LENGTH_MIN,\n      minLength: 9\n    }, value));\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeSwitch, {\n    themeState: theme,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeHolder: \"text\",\n      value: value,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 92\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"h\",\n      label: \"validate\",\n      handleClick: handleValidateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n      className: \"h\",\n      arr: [{\n        display: 'profile',\n        routeTo: ''\n      }, {\n        display: 'change-password',\n        routeTo: ''\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"hello\",\n      label: theme,\n      handleClick: () => setTheme(theme === 'light' ? 'dark' : 'light')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"Wv2tK7RAUsgI5v1blHvL/vn3Vzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeSwitch","Button","BreadCrumb","Input","validateOne","ValidatorConstants","App","theme","setTheme","value","setValue","handleInputChange","e","target","handleValidateInput","console","log","type","LENGTH_MIN","minLength","display","routeTo"],"sources":["C:/React/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input, validateOne, ValidatorConstants } from 'switch-themes';\nimport './App.css';\n\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [value, setValue] = useState('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }\n\n  const handleValidateInput = () => {\n    console.log(validateOne({ type: ValidatorConstants.LENGTH_MIN, minLength: 9 }, value))\n  }\n\n  return (\n      <ThemeSwitch themeState={theme}>\n        <Input type=\"text\" placeHolder='text' value={value} onChange={handleInputChange} /><br />\n\n        <Button className='h' label={\"validate\"} handleClick={handleValidateInput} />\n        <BreadCrumb\n          className='h'\n          arr={[\n            { display: 'profile', routeTo: '' },\n            { display: 'change-password', routeTo: '' },\n          ]} />\n        <Button className='hello' label={theme} handleClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} />\n      </ThemeSwitch>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,WAAW,EAAEC,kBAAkB,QAAQ,eAAe;AACvG,OAAO,WAAW;AAAC;AAGnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,iBAAiB,GAAIC,CAAsC,IAAK;IACpEF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,mBAAmB,GAAG,MAAM;IAChCC,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;MAAEa,IAAI,EAAEZ,kBAAkB,CAACa,UAAU;MAAEC,SAAS,EAAE;IAAE,CAAC,EAAEV,KAAK,CAAC,CAAC;EACxF,CAAC;EAED,oBACI,QAAC,WAAW;IAAC,UAAU,EAAEF,KAAM;IAAA,wBAC7B,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,MAAM;MAAC,KAAK,EAAEE,KAAM;MAAC,QAAQ,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;MAAA;MAAA;MAAA;IAAA,QAAM,eAEzF,QAAC,MAAM;MAAC,SAAS,EAAC,GAAG;MAAC,KAAK,EAAE,UAAW;MAAC,WAAW,EAAEG;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7E,QAAC,UAAU;MACT,SAAS,EAAC,GAAG;MACb,GAAG,EAAE,CACH;QAAEM,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAG,CAAC,EACnC;QAAED,OAAO,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAG,CAAC;IAC3C;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,MAAM;MAAC,SAAS,EAAC,OAAO;MAAC,KAAK,EAAEd,KAAM;MAAC,WAAW,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjG;AAEpB;AAAC,GA3BQD,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}