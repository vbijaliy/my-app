{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input } from 'switch-themes';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const validateOne = (valdation, value) => {\n    switch (valdation.type) {\n      case ValidatorConstants.REQUIRED:\n        return validateRequired(value);\n      case ValidatorConstants.LENGTH_MIN:\n        return validateLengthMin(valdation.minLength, value);\n      case ValidatorConstants.LENGTH_MAX:\n        return validateLengthMax(valdation.maxLength, value);\n    }\n    return true;\n  };\n  const handleInputChange = e => {\n    validateOne({\n      type: \"LENGTH_MIN\"\n    }, e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeSwitch, {\n      themeState: theme,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: \"\",\n        placeHolder: \"text\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"hello\",\n        label: theme,\n        handleClick: () => setTheme(theme === 'light' ? 'dark' : 'light')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n        className: \"h\",\n        arr: [{\n          display: 'profile',\n          routeTo: ''\n        }, {\n          display: 'change-password',\n          routeTo: ''\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeSwitch","Button","BreadCrumb","Input","App","theme","setTheme","validateOne","valdation","value","type","ValidatorConstants","REQUIRED","validateRequired","LENGTH_MIN","validateLengthMin","minLength","LENGTH_MAX","validateLengthMax","maxLength","handleInputChange","e","target","display","routeTo"],"sources":["C:/React/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input } from 'switch-themes';\nimport './App.css';\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n\n  const validateOne = (valdation: ValidatorDefinition, value: number | string): boolean => {\n    switch (valdation.type) {\n        case ValidatorConstants.REQUIRED:\n            return validateRequired(value)\n        case ValidatorConstants.LENGTH_MIN:\n            return validateLengthMin(valdation.minLength, value)\n        case ValidatorConstants.LENGTH_MAX:\n            return validateLengthMax(valdation.maxLength, value)\n    }\n    return true\n}\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    validateOne({ type: \"LENGTH_MIN\"}, e.target.value)\n  }\n\n  return (\n    <>\n      <ThemeSwitch themeState={theme}>\n        <Input type=\"text\" value='' placeHolder='text' onChange={handleInputChange} />\n        <Button className='hello' label={theme} handleClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} />\n        <BreadCrumb\n          className='h'\n          arr={[\n            { display: 'profile', routeTo: '' },\n            { display: 'change-password', routeTo: '' },\n          ]} />\n      </ThemeSwitch>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,WAAW;AAAC;AAAA;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMQ,WAAW,GAAG,CAACC,SAA8B,EAAEC,KAAsB,KAAc;IACvF,QAAQD,SAAS,CAACE,IAAI;MAClB,KAAKC,kBAAkB,CAACC,QAAQ;QAC5B,OAAOC,gBAAgB,CAACJ,KAAK,CAAC;MAClC,KAAKE,kBAAkB,CAACG,UAAU;QAC9B,OAAOC,iBAAiB,CAACP,SAAS,CAACQ,SAAS,EAAEP,KAAK,CAAC;MACxD,KAAKE,kBAAkB,CAACM,UAAU;QAC9B,OAAOC,iBAAiB,CAACV,SAAS,CAACW,SAAS,EAAEV,KAAK,CAAC;IAAA;IAE5D,OAAO,IAAI;EACf,CAAC;EAEC,MAAMW,iBAAiB,GAAIC,CAAsC,IAAK;IACpEd,WAAW,CAAC;MAAEG,IAAI,EAAE;IAAY,CAAC,EAAEW,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC;EACpD,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,WAAW;MAAC,UAAU,EAAEJ,KAAM;MAAA,wBAC7B,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAC,EAAE;QAAC,WAAW,EAAC,MAAM;QAAC,QAAQ,EAAEe;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9E,QAAC,MAAM;QAAC,SAAS,EAAC,OAAO;QAAC,KAAK,EAAEf,KAAM;QAAC,WAAW,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7G,QAAC,UAAU;QACT,SAAS,EAAC,GAAG;QACb,GAAG,EAAE,CACH;UAAEkB,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAG,CAAC,EACnC;UAAED,OAAO,EAAE,iBAAiB;UAAEC,OAAO,EAAE;QAAG,CAAC;MAC3C;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACK,iBACb;AAEP;AAAC,GAlCQpB,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}