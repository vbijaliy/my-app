{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb } from 'switch-themes';\nimport 'switch-themes/dist/cjs/styles/_main.scss';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [breadCrumbArr, setBreadCrumbArr] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeSwitch, {\n      themeState: theme,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"hello\",\n        label: theme,\n        handleClick: () => setTheme(theme === 'light' ? 'dark' : 'light')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n        className: \"h\",\n        arr: [{\n          display: 'cmd',\n          routeTo: ''\n        }, {\n          display: 'cmd2',\n          routeTo: ''\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"I5xZCXHBHN+LiSzLGfMlKaeYBAA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ThemeSwitch","Button","BreadCrumb","App","theme","setTheme","breadCrumbArr","setBreadCrumbArr","display","routeTo"],"sources":["C:/React/my-app/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input } from 'switch-themes';\nimport 'switch-themes/dist/cjs/styles/_main.scss';\nimport './App.css';\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [breadCrumbArr,setBreadCrumbArr] = useState()\n\n  return (\n    <>\n      <ThemeSwitch themeState={theme}>\n        <Button className='hello' label={theme} handleClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} />\n        <BreadCrumb\n          className='h'\n          arr={[\n            { display: 'cmd', routeTo: '' },\n            { display: 'cmd2', routeTo: '' },\n          ]} />\n      </ThemeSwitch>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,QAAe,eAAe;AACtE,OAAO,0CAA0C;AACjD,OAAO,WAAW;AAAC;AAAA;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACO,aAAa,EAACC,gBAAgB,CAAC,GAAGR,QAAQ,EAAE;EAEnD,oBACE;IAAA,uBACE,QAAC,WAAW;MAAC,UAAU,EAAEK,KAAM;MAAA,wBAC7B,QAAC,MAAM;QAAC,SAAS,EAAC,OAAO;QAAC,KAAK,EAAEA,KAAM;QAAC,WAAW,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7G,QAAC,UAAU;QACT,SAAS,EAAC,GAAG;QACb,GAAG,EAAE,CACH;UAAEI,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAE;QAAG,CAAC,EAC/B;UAAED,OAAO,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAG,CAAC;MAChC;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACK,iBACb;AAEP;AAAC,GAlBQN,GAAG;AAAA,KAAHA,GAAG;AAoBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}