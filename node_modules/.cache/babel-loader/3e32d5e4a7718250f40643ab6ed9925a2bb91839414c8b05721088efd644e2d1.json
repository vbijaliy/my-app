{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb } from 'switch-themes';\nimport 'switch-themes/dist/cjs/styles/_main.scss';\nimport 'switch-themes/dist/cjs/';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeSwitch, {\n      themeState: theme,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: theme,\n        handleClick: () => setTheme(theme === 'light' ? 'dark' : 'light')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n        children: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n        arr: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ThemeSwitch","Button","BreadCrumb","App","theme","setTheme"],"sources":["C:/React/my-app/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb } from 'switch-themes';\nimport 'switch-themes/dist/cjs/styles/_main.scss';\nimport 'switch-themes/dist/cjs/';\nimport './App.css';\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <div className=\"App\">\n      <ThemeSwitch themeState={theme}>\n        <Button label={theme} handleClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} />\n        <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>{theme}</button>\n        <BreadCrumb arr={[]} />\n      </ThemeSwitch>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAC/D,OAAO,0CAA0C;AACjD,OAAO,yBAAyB;AAChC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EAE3C,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,WAAW;MAAC,UAAU,EAAEK,KAAM;MAAA,wBAC7B,QAAC,MAAM;QAAC,KAAK,EAAEA,KAAM;QAAC,WAAW,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3F;QAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAE;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAU,eACvF,QAAC,UAAU;QAAC,GAAG,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GAbQD,GAAG;AAAA,KAAHA,GAAG;AAeZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}