{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input, validateOne } from 'switch-themes';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [value, setValue] = useState('');\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n  const handleValidateInput = () => {\n    console.log(validateOne({\n      type: \"\",\n      minLength: 9\n    }, value));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeSwitch, {\n      themeState: theme,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeHolder: \"text\",\n        value: value,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"hello\",\n        label: theme,\n        handleClick: () => setTheme(theme === 'light' ? 'dark' : 'light')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"h\",\n        label: \"validate\",\n        handleClick: handleValidateInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n        className: \"h\",\n        arr: [{\n          display: 'profile',\n          routeTo: ''\n        }, {\n          display: 'change-password',\n          routeTo: ''\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Wv2tK7RAUsgI5v1blHvL/vn3Vzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeSwitch","Button","BreadCrumb","Input","validateOne","App","theme","setTheme","value","setValue","handleInputChange","e","target","handleValidateInput","console","log","type","minLength","display","routeTo"],"sources":["C:/React/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeSwitch, Button, BreadCrumb, Input, validateOne, ValidatorConstants, ValidatorDefinition } from 'switch-themes';\nimport './App.css';\n\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [value, setValue] = useState('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }\n\n  const handleValidateInput = () => {\n    console.log(validateOne({ type: \"\", minLength: 9 }, value))\n  }\n\n  return (\n    <>\n      <ThemeSwitch themeState={theme}>\n        <Input type=\"text\" placeHolder='text' value={value} onChange={handleInputChange} />\n        <Button className='hello' label={theme} handleClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} />\n        <Button className='h' label={\"validate\"} handleClick={handleValidateInput} />\n        <BreadCrumb\n          className='h'\n          arr={[\n            { display: 'profile', routeTo: '' },\n            { display: 'change-password', routeTo: '' },\n          ]} />\n      </ThemeSwitch>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,WAAW,QAAiD,eAAe;AAC5H,OAAO,WAAW;AAAC;AAAA;AAGnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,iBAAiB,GAAIC,CAAsC,IAAK;IACpEF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,mBAAmB,GAAG,MAAM;IAChCC,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC;MAAEY,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAE,CAAC,EAAET,KAAK,CAAC,CAAC;EAC7D,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,WAAW;MAAC,UAAU,EAAEF,KAAM;MAAA,wBAC7B,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,MAAM;QAAC,KAAK,EAAEE,KAAM;QAAC,QAAQ,EAAEE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnF,QAAC,MAAM;QAAC,SAAS,EAAC,OAAO;QAAC,KAAK,EAAEJ,KAAM;QAAC,WAAW,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7G,QAAC,MAAM;QAAC,SAAS,EAAC,GAAG;QAAC,KAAK,EAAE,UAAW;QAAC,WAAW,EAAEO;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7E,QAAC,UAAU;QACT,SAAS,EAAC,GAAG;QACb,GAAG,EAAE,CACH;UAAEK,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAG,CAAC,EACnC;UAAED,OAAO,EAAE,iBAAiB;UAAEC,OAAO,EAAE;QAAG,CAAC;MAC3C;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACK,iBACb;AAEP;AAAC,GA5BQd,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}